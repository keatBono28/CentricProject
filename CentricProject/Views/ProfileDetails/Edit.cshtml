@model CentricProject.Models.ProfileDetails

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#profImage')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
    window.onload = function () {
        var x = document.getElementById("UploadNewImage");
        x.style.display = "none";
    }
</script>
<style>
    input.prevImage{
        background: url(@Url.Action("ProfileImage", "ProfileDetails"))
    }
</style>
<h2>Edit</h2>


@using (Html.BeginForm("Edit", "ProfileDetails",FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ProfileDetails</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.prefferedName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.prefferedName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.prefferedName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.hireDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.hireDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.hireDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.businessUnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.businessUnit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.businessUnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.profileImage, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div id="UploadNewImage">
                <input class="prevImage" type="file" name="profileImageUpdate" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" onchange="readURL(this);" />
                <img id="profImage" src="#" style="width:160px;margin:auto;" />
            </div>
            <div id="hideImage">
                <img src="@Url.Action("ProfileImage", "ProfileDetails")" style="width:160px;margin:auto;" />
            </div>
            <div id="UsingOldImage">
                <label><input name="useOldImage" type="checkbox" value="true" checked onchange="UploadNewImage()" />Use old profile image?</label>
            </div>

        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function UploadNewImage() {
        var x = document.getElementById("UploadNewImage");
        var y = document.getElementById("hideImage");
        if (x.style.display === "none" && y.style.display !== "block") {
            x.style.display = "block";
            y.style.display = "none";
        } else {
            x.style.display = "none";
            y.style.display = "block";
        }
    }
</script>